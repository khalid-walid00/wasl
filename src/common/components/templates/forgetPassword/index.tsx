import React, { useState } from "react";
import { useFormik } from "formik";
import { Toast } from "~/utils/libraries";
import { useRouter } from "next/navigation";
import { useDispatch } from "react-redux";
import { goToStep, setData } from "~/app/(auth)/forgetPassword/forgetPassword.slice";
import Button from "../../atoms/button";
import CustomBtnBack from "../../atoms/customBtnBack";
import EmailInput from "../../molecules/emailInput";
import { fetchDataFromApi } from "~/utils/libraries/axios/axiosServer";

export default function ForgetPasswordTemplate() {
  const [loading, setLoading] = useState(false);
  const router = useRouter();
  const dispatch = useDispatch()
  
  const handleSubmit = async (values: any) => {
    setLoading(true);
    try {
      const response = await fetchDataFromApi(`/authentication/forget-password?Email=${values.email}`, null, "GET", null);
      setLoading(false);
      const { StatusCode, Message,errors,status }: any = response;
      console.log("response", response);
      if (StatusCode === 200) {
        dispatch(setData({ Email: values.email }));
        dispatch(goToStep(2));
        return Toast.fire({
          title: Message,
          icon: "success",
        });
      } else if (status === 400) {
        const errorMessages = Object.keys(errors).map(field => {
          return `${field}: ${errors[field].join(", ")}`;
        }).join(", ");
        return Toast.fire({
          title: errorMessages, 
          icon: "error", 
        });
      }
      else{
        Toast.fire({
          title: Message,
          icon: "error",
        });
      }
    } catch (error: any) {
      Toast.fire({
        title: error,
        icon: "error",
      });
      setLoading(false);
    }
  };
  
  

  const formik = useFormik({
    initialValues: { email: "" },
    onSubmit: handleSubmit,
  });

  const handleBack = () => {
    router.push("/login");
  };

  return (
    <form onSubmit={formik.handleSubmit} className="flex w-full flex-col gap-8">
    <div className="flex flex-col items-center w-full justify-center">
      <div className="flex flex-col items-center gap-8">
        <div className="relative md:w-[123px] md:h-[95px] h-[95px] w-[124px]">
        <svg width="124" height="96" viewBox="0 0 124 96" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M53.2063 57.7471H79.1245C80.708 53.6089 81.577 49.0967 81.577 44.3673C81.577 39.3363 80.5922 34.5491 78.8107 30.1913L78.7455 30.0417C76.8482 25.4667 74.0577 21.3358 70.5962 17.8732V17.8611C67.1123 14.3767 62.9768 11.6113 58.4252 9.72228C54.0295 7.90292 49.1848 6.89672 44.089 6.89672C39.0512 6.89672 34.262 7.87879 29.9024 9.65954L29.7528 9.72469C25.2012 11.6114 21.0663 14.3762 17.5843 17.8611L17.5722 17.8732C14.0858 21.3538 11.3199 25.4871 9.43249 30.0368C7.60998 34.4332 6.60338 39.2736 6.60338 44.3673C6.60338 49.4031 7.58584 54.1928 9.36731 58.5506L9.43249 58.6978C10.6234 61.5692 12.1673 64.2813 14.0286 66.7715C19.1581 64.0449 27.7951 64.2934 32.7388 60.8477C33.0574 60.3675 33.4026 59.6678 33.7357 58.9101C34.2378 57.764 34.6917 56.5165 34.9837 55.6599C33.7623 54.2218 32.7171 52.6027 31.7129 51.0005C30.1294 48.4814 26.6075 43.7472 26.523 40.9289C26.5037 40.2919 26.6123 39.7152 26.8489 39.206C27.0927 38.6704 27.4741 38.2288 27.9882 37.8837C28.2272 37.7221 28.4976 37.5869 28.7896 37.4784C28.5724 34.6214 28.4976 31.0286 28.6327 28.0148C28.7027 27.303 28.8452 26.5863 29.0407 25.8721C29.8904 22.8535 32.005 20.4189 34.6313 18.7515C36.0772 17.8298 37.6632 17.1373 39.3191 16.6691C40.3716 16.3723 38.4236 13.0135 39.5098 12.8977C44.7673 12.3548 53.2691 17.159 56.9407 21.1258C58.7776 23.1117 59.9339 25.7515 60.185 29.2357L59.9798 37.8234C60.8971 38.1009 61.4861 38.6848 61.7226 39.6283C62.5168 42.7555 58.3335 48.2473 56.9889 50.4648C55.6034 52.7426 54.1912 55.0374 52.3615 56.8398C52.5232 57.0787 52.6946 57.3152 52.8563 57.5589L52.9843 57.7495L53.2063 57.7471ZM64.4045 71.192C64.4045 70.2413 65.1745 69.474 66.1232 69.474C67.0718 69.474 67.8443 70.2413 67.8443 71.192V73.4143L69.6861 72.1813C69.8731 72.0562 70.083 71.969 70.3037 71.9249C70.5244 71.8808 70.7517 71.8806 70.9725 71.9243C71.1933 71.968 71.4033 72.0548 71.5905 72.1796C71.7778 72.3044 71.9386 72.4649 72.0638 72.6518C72.5925 73.4361 72.38 74.5002 71.5931 75.0286L69.2154 76.6187L71.5955 78.1992C72.3849 78.7228 72.6021 79.7869 72.0807 80.576C71.5569 81.365 70.4899 81.5821 69.7006 81.061L67.8443 79.8231V82.0527C67.8443 83.0034 67.0718 83.7731 66.1232 83.7731C65.1745 83.7731 64.4045 83.0034 64.4045 82.0527V79.8328L62.5603 81.0658C62.1822 81.3173 61.7198 81.409 61.2743 81.3208C60.8288 81.2327 60.4363 80.9718 60.1825 80.5953C60.0573 80.4083 59.9702 80.1985 59.9261 79.9779C59.8819 79.7573 59.8817 79.5301 59.9254 79.3094C59.9692 79.0887 60.0559 78.8788 60.1808 78.6916C60.3057 78.5044 60.4662 78.3437 60.6533 78.2185L63.0334 76.6284L60.6508 75.0455C59.8615 74.5243 59.6467 73.4602 60.1681 72.6687C60.4198 72.2901 60.8114 72.0266 61.2571 71.9362C61.7028 71.8457 62.1663 71.9356 62.5458 72.1861L64.4045 73.4216V71.192ZM101.113 71.192C101.113 70.9663 101.157 70.7428 101.243 70.5342C101.329 70.3256 101.456 70.1361 101.616 69.9765C101.775 69.8169 101.965 69.6903 102.173 69.6041C102.382 69.5179 102.606 69.4737 102.832 69.474C103.78 69.474 104.55 70.2413 104.55 71.192V73.4143L106.394 72.1813C106.772 71.9367 107.231 71.8505 107.672 71.9413C108.113 72.032 108.5 72.2924 108.751 72.6663C109.001 73.0401 109.094 73.4974 109.01 73.9394C108.926 74.3814 108.672 74.7726 108.301 75.0286L105.921 76.6187L108.304 78.1992C108.683 78.4508 108.946 78.8423 109.037 79.2878C109.127 79.7334 109.037 80.1966 108.787 80.576C108.265 81.365 107.198 81.5821 106.409 81.061L104.55 79.8231V82.0527C104.55 83.0034 103.78 83.7731 102.832 83.7731C101.88 83.7731 101.113 83.0034 101.113 82.0527V79.8328L99.2686 81.0658C98.4817 81.5894 97.4171 81.3795 96.8909 80.5953C96.3647 79.8086 96.5747 78.7445 97.3592 78.2185L99.7393 76.6284L97.3592 75.0455C96.5698 74.5243 96.3526 73.4602 96.8764 72.6687C97.3978 71.8797 98.4623 71.6649 99.2541 72.1861L101.113 73.4216V71.192ZM82.7599 71.192C82.7599 70.2413 83.5299 69.474 84.4786 69.474C85.4272 69.474 86.1997 70.2413 86.1997 71.192V73.4143L88.0415 72.1813C88.2285 72.0562 88.4384 71.969 88.6591 71.9249C88.8798 71.8808 89.107 71.8806 89.3278 71.9243C89.5486 71.968 89.7587 72.0548 89.9459 72.1796C90.1332 72.3044 90.294 72.4649 90.4192 72.6518C90.9454 73.4361 90.7354 74.5002 89.9509 75.0286L87.5708 76.6187L89.9509 78.1992C90.7402 78.7228 90.9575 79.7869 90.4337 80.576C89.9123 81.365 88.8453 81.5821 88.056 81.061L86.1997 79.8231V82.0527C86.1997 83.0034 85.4272 83.7731 84.4786 83.7731C83.5299 83.7731 82.7599 83.0034 82.7599 82.0527V79.8328L80.9156 81.0658C80.1287 81.5894 79.0642 81.3795 78.5379 80.5953C78.4127 80.4083 78.3256 80.1985 78.2814 79.9779C78.2373 79.7573 78.2371 79.5301 78.2808 79.3094C78.3245 79.0887 78.4113 78.8788 78.5362 78.6916C78.6611 78.5044 78.8216 78.3437 79.0086 78.2185L81.3863 76.6284L79.0062 75.0455C78.2169 74.5243 77.9996 73.4602 78.5234 72.6687C78.7751 72.2901 79.1668 72.0266 79.6125 71.9362C80.0582 71.8457 80.5216 71.9356 80.9011 72.1861L82.7599 73.4216V71.192ZM85.8859 57.7471H115.748C120.173 57.7471 123.796 61.3689 123.796 65.7894V87.4552C123.796 91.8396 120.134 95.5 115.748 95.5H53.2063C51 95.5 48.982 94.5927 47.524 93.1329C46.206 91.8127 45.3841 90.0783 45.197 88.2226C39.0704 88.3805 32.9789 87.2501 27.3172 84.9048L27.3075 84.8999C21.9486 82.6849 17.1208 79.4274 13.0751 75.3833L13.063 75.3712C9.01488 71.3247 5.7561 66.4988 3.5353 61.1445L3.47013 60.9756C1.31095 55.7046 0.201541 50.0631 0.204106 44.3673C0.204106 38.446 1.38934 32.7828 3.5353 27.6022L3.54013 27.5925C5.7561 22.2358 9.01488 17.4099 13.063 13.3658L13.0751 13.3538C17.1232 9.30725 21.9486 6.04978 27.3051 3.82987L27.4765 3.76472C32.7487 1.60618 38.3917 0.497205 44.089 0.500005C50.0127 0.500005 55.6806 1.68476 60.8609 3.82987L60.8705 3.83469C66.2342 6.05219 71.0645 9.31208 75.1102 13.3586C79.194 17.4307 82.4335 22.2686 84.6427 27.5949L84.7079 27.7663C86.8688 33.0343 87.979 38.6736 87.9763 44.3673C87.9763 49.0219 87.2425 53.5196 85.8859 57.7471ZM53.2063 62.5416H115.748C117.537 62.5416 118.997 64.028 118.997 65.7894V87.4552C118.997 89.2167 117.513 90.7031 115.748 90.7031H53.2063C51.4442 90.7031 49.9572 89.2408 49.9572 87.4552V65.7894C49.9572 64.0038 51.4201 62.5416 53.2063 62.5416Z" fill="#008ffb"/>
</svg>

        </div>
        <div className="flex flex-col gap-2">
          <div className="text-[24px] text-subColor text-center font-bold">
          ?Forgot Password
          </div>
          <div className="text-base text-grayG text-center">
            Please enter your email to receive a verification code
          </div>
        </div>
      </div>
    </div>
    <div>
      <EmailInput 
        name="email"
        placeholder="Email Address"
        label="Email Address"
        value={formik.values.email}
        formik={formik}
        onChange={formik.handleChange}
      />
    </div>
    <div className=" flex gap-6">
    <Button style={{ height: "55px" }} primary type={"submit"} loading={loading}>
      Send
    </Button>
    <CustomBtnBack type="button" onClick={handleBack} />
    </div>
    <div onClick={handleBack} className="absolute top-[30px] left-[22px] flex md:hidden items-center justify-center w-[40px] h-[40px] rounded-full border border-mainColor">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.1667 16.375L7 12M7 12L11.1667 7.625M7 12H17" stroke="#229799" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
    </div>
  </form>
  
  );
}
